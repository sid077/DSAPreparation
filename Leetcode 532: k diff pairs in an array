Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.

A k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:

0 <= i < j < nums.length
|nums[i] - nums[j]| == k
Notice that |val| denotes the absolute value of val.

//solution 
class Solution {
    public int findPairs(int[] nums, int k) {
        Map<Integer,Integer> map = new HashMap<>();
        int ans=0;
        if(k==0){
            for(int i=0;i<nums.length;i++){
                int freq = map.getOrDefault(nums[i],0);
                if(freq==1) ans++;
               map.put(nums[i],freq+1);
            }
            return ans;
        }
      
        for(int i=0;i<nums.length;i++){
            map.put(nums[i],nums[i]+k);
        }
        
        for(Map.Entry<Integer,Integer> e: map.entrySet()){
            if(map.containsKey(e.getKey()+k)) ans++;
        }
        return ans;
    }
}
